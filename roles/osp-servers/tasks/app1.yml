---

- name: app1 - Create new server instance and attaches them a network and passes metadata to the instance
  os_server:
   cloud: ospcloud
   state: present
   name: "{{ osp_servers.app1.name }}"
   image: "{{ osp_servers.app1.image }}"
   key_name: "{{ osp_servers.app1.key_name }}"
   flavor: "{{ osp_servers.app1.flavor }}"
   network: "{{ osp_servers.app1.networks.int }}"
   security_groups: "{{ osp_servers.app1.security_group }}"
   meta:
    group: "{{ osp_servers.app1.meta.group }}"
    deployment_name: "{{ osp_servers.app1.meta.deployment_name }}"
   userdata: |
    #!/bin/bash
    curl -o /tmp/openstack.pub http://www.opentlc.com/download/ansible_bootcamp/openstack_keys/openstack.pub
    cat /tmp/openstack.pub >> /home/cloud-user/.ssh/authorized_keys
    curl -o /tmp/internal.repo http://www.opentlc.com/download/ansible_bootcamp/repo/internal.repo
    cp /tmp/internal.repo /etc/yum.repos.d/internal.repo
  register: instanceip

- name: app1 - Add floating IP to Servers
  os_floating_ip:
   cloud: ospcloud
   state: present
   server: "{{ osp_servers.app1.name }}"
   network: "{{ osp_servers.app1.networks.ext }}"
  register: instancefloatingip

- name: frontned - Show "{{ instanceip }}" floating (public) IP
  debug: var=instancefloatingip.floating_ip.floating_ip_address

- name: app1 - Wait for server to be available
  wait_for:
   host: "{{ instancefloatingip.floating_ip.floating_ip_address }}"
   port: 22
   search_regex: OpenSSH
   timeout: 600
  delegate_to: "{{ inventory_hostname }}" 

